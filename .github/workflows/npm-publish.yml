name: NPM Package Publish

on:
  workflow_call:
    secrets:
      npm-token:
        required: true
    inputs:
      build-command:
        type: string
        required: false
        default: "npm run build"
      test-command:
        type: string
        required: false
        default: "npm test --if-present"
      
        
env:
  NODEJS_VERSION: 16.20.0

jobs:
  check-is-version-updated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - id: check-is-version-updated
        uses: FreePhoenix888/is-npm-package-version-changed-github-action@0.0.1
#       - id: check-is-version-updated
#         run: |
#           current_package_version=$(node -p "require('./package.json').version")
#           npm_package_version=$(npm view @${{ github.repository }} version)

#           if [ "${current_package_version}" == "${npm_package_version}" ]; then
#               is_version_changed="false"
#           else
#               is_version_changed="true"
#           fi
#           echo "is-version-changed=${is_version_changed}" >> $GITHUB_OUTPUT

      - run: echo ${{ steps.check-is-version-updated.outputs.is-version-changed }} 
    outputs:
      is-version-changed: ${{ steps.check-is-version-updated.outputs.is-version-changed }}
  main:
    runs-on: ubuntu-latest
    needs:
      - check-is-version-updated
    if: ${{ needs.check-is-version-updated.outputs.is-version-changed == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: https://registry.npmjs.org/
      - run: npm i -g npm@latest
      - run: npm clean-install
      - run: ${{ inputs.build-command }} 
      - run: ${{ inputs.test-command }}
      - uses: JS-DevTools/npm-publish@v1
        id: publish
        with:
          token: ${{ secrets.npm-token }}
      - name: Create Github Release
        if: steps.publish.outputs.type != 'none'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish.outputs.version }}
          release_name: Release ${{ steps.publish.outputs.version }}
          body: ${{ steps.publish.outputs.version }}
          draft: false
          prerelease: false
